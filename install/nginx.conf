# 1. Replace {USER} with your user
# 2. Replace {DOMAIN} with your domain name
# 3. Push ssl certificates to /etc/nginx/ssl with following names:
#		ssl/{DOMAIN}-fullchain.pem
#		ssl/{DOMAIN}-privkey.pem
# 4. Create dhparam.pem with this command:
#		openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
# 5. Fill $APP_IMAGE_PROXY_KEY and set it to config/common.php

server {
	listen 80;
	listen 443 ssl http2;
	resolver 8.8.8.8 8.8.4.4 ipv6=off;
	resolver_timeout 60s;
	
	############################################ settings ############################################
	set $APP_IMAGE_PROXY_KEY	"**change me plesase***";
	set $APP_ROOT				"/home/{USER}/apps/xujxuj";
	access_log					"/home/{USER}/logs/xujxuj/access.log";
	error_log					"/home/{USER}/logs/xujxuj/error.log";
	ssl_certificate				ssl/{DOMAIN}-fullchain.pem;
	ssl_certificate_key			ssl/{DOMAIN}-privkey.pem;
	ssl_dhparam					ssl/dhparam.pem;
	server_name					{DOMAIN};
	##################################################################################################
	
	set $img_proxy_url			"";
	root						"$APP_ROOT/www";
	ssl_session_cache			shared:SSL:10m;
	ssl_session_timeout			10m;	
	client_max_body_size		200M;
	index						index.php index.html; 
	
	add_header				Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	
	if ($scheme = "http") {
		return 301 https://$host$request_uri;
	}
	
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	}
	
	location ~ ^/img-proxy-internal/(.*?)$ {
		internal;
		
		set $img_proxy_url $1$is_args$args;
		
		proxy_method GET;
		proxy_intercept_errors on;
		proxy_ssl_server_name on;
		error_page 301 302 307 = @img_proxy_redirect;
		proxy_pass_request_headers off;
		proxy_pass_request_body off;
		proxy_pass $img_proxy_url;
		proxy_set_header User-Agent "Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36";
	}
	
	location @img_proxy_redirect {
		perl '
			use URI::Escape;
			
			sub {
				my $r = shift;
				
				my $location = $r->variable("upstream_http_location");
				my $img_proxy_url = $r->variable("img_proxy_url");
				
				my $origin;
				if ($img_proxy_url =~ /^((http|https):\/\/([^#?\/]+))/i) {
					$origin = $1;
				} else {
					$r->send_http_header("text/plain");
					$r->print("Invalid origin: $img_proxy_url");
					return NOT_FOUND;
				}
				
				if ($location !~ /^(http|https):\/\//i) {
					if ($location =~ /^\//) {
						$location = "$origin$location";
					} else {
						$location = "$origin/$location";
					}
				}
				
				$r->internal_redirect("/img-proxy-internal/$location");
				
				return OK;
			}
		';
	}
	
	location /img-proxy/ {
		perl '
			use URI::Escape;
			use Digest::SHA qw(sha256_hex);
			
			sub {
				my $r = shift;
				
				my $key1 = $r->variable("cookie_impk") || "";
				my $key2 = $r->variable("APP_IMAGE_PROXY_KEY") || "";
				my $hash = $r->unescape($r->variable("arg_hash") || "");
				my $url = $r->unescape($r->variable("arg_url") || "");
				
				my $url_hash = Digest::SHA::sha256_hex("img-proxy:$key1:$key2:$url");
				if (!$key1 || !$key2 || $url_hash ne $hash) {
					$r->send_http_header("text/plain");
					$r->print("Image proxy error, Invalid arguments. IP: ".$r->remote_addr."\n");
					return NOT_FOUND;
				}
				
				$r->internal_redirect("/img-proxy-internal/$url");
				return OK;
			}
		';
	}

	location / {
		expires 365d;
	}

	location ~ /\.ht {
		deny all;
	}
}
